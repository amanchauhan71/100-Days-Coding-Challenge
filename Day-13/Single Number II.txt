137. Single Number II


Given a non-empty array of integers, every element appears three times except for one, which appears exactly once. Find that single one.

Note:

Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Example 1:

Input: [2,2,3,2]
Output: 3


class Solution {
    public int singleNumber(int[] nums) {
        
        HashMap<Integer,Integer> h = new HashMap<Integer,Integer>();
        
        for(int i=0; i<nums.length; i++){
            if(h.containsKey(nums[i])){
                h.put(nums[i], h.get(nums[i]) + 1);
            } else {
                h.put(nums[i], 1);
            }
        }
        
    for (int i : h.keySet()) {
   
     if(h.get(i)==1)
         return i;
    }
    
      return 0;  
    }
}