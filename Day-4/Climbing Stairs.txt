70. Climbing Stairs

You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

Example 1:

Input: 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps


class Solution {
    public int climbStairs(int n) {
        int[] climb_count = new int[n];
        
        if(n==1)
            return 1;
        climb_count[0]=1;
        climb_count[1]=2;
        for(int i = 2 ; i<n ; i++){
            
            climb_count[i]= climb_count[i-1]+ climb_count[i-2];
        }
        
        return climb_count[n-1];
        
    }
}