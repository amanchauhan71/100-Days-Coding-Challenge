516. Longest Palindromic Subsequence



Given a string s, find the longest palindromic subsequence's length in s. You may assume that the maximum length of s is 1000.

Example 1:
Input:

"bbbab"
Output:
4









class Solution {
    public int longestPalindromeSubseq(String s) {
        
        char[] ch = s.toCharArray();
        
        int[][] arr = new int[ch.length][ch.length];
        
        
        for(int i=0;i<ch.length;i++){
            
            arr[i][i]=1;
        }
         
        for(int i=0;i<ch.length-1;i++){
            
            arr[i][i+1]=1;
        }
        
      
 
         
         for(int l = 2; l <= ch.length; l++){
            for(int i = 0; i < ch.length-l + 1; i++){
                int j = i + l - 1;
                if(l == 2 && ch[i] == ch[j]){
                    arr[i][j] = 2;
                }else if(ch[i] == ch[j]){
                    arr[i][j] = arr[i + 1][j-1] + 2;
                }else{
                    arr[i][j] = Math.max(arr[i + 1][j], arr[i][j - 1]);
                }
            }
        }
        return arr[0][ch.length-1];
    }
}