1143. Longest Common Subsequence


Given two strings text1 and text2, return the length of their longest common subsequence.

A subsequence of a string is a new string generated from the original string with some characters(can be none) deleted without changing the relative order of the remaining characters. (eg, "ace" is a subsequence of "abcde" while "aec" is not). A common subsequence of two strings is a subsequence that is common to both strings.

 

If there is no common subsequence, return 0.

 

Example 1:

Input: text1 = "abcde", text2 = "ace" 
Output: 3  
Explanation: The longest common subsequence is "ace" and its length is 3.





class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        
        
        int[][] arr = new int[text1.length()+1][text2.length()+1];
        
        char[] ch1 = text1.toCharArray();
        char[] ch = text2.toCharArray();
        int ctr=0,ptr=0;
        for(int i=1;i<arr.length;i++){
            
           for(int j=1;j<arr[i].length;j++){
               
               if(ch1[ctr]!=ch[ptr]){
                   
                   arr[i][j]=Math.max(arr[i][j-1],arr[i-1][j]);
                   
               }
               else{
                   arr[i][j]=arr[i-1][j-1]+1;
               }
               ptr++;
           }
            ptr=0;
            ctr++;
        }
        

        return arr[arr.length-1][arr[0].length-1];
    }
}