1277. Count Square Submatrices with All Ones

Given a m * n matrix of ones and zeros, return how many square submatrices have all ones.

 

Example 1:

Input: matrix =
[
  [0,1,1,1],
  [1,1,1,1],
  [0,1,1,1]
]
Output: 15
Explanation: 
There are 10 squares of side 1.
There are 4 squares of side 2.
There is  1 square of side 3.
Total number of squares = 10 + 4 + 1 = 15.


class Solution {
    public int countSquares(int[][] matrix) {
        
        
         if(matrix.length==0)
            return 0;
        
        if(matrix.length==1 && matrix[0].length==1 && matrix[0][0]==1)
            return 1;
        else if (matrix.length==1 && matrix[0].length==1 && matrix[0][0]==0)
                return 0 ;
        int[][] square = new int[matrix.length+1][matrix[0].length+1];
       
        int max_val=0,count=0;
        
       
        for(int i =1 ; i<square.length ; i++){
            
            for(int j=1 ; j<square[i].length;j++){
         
                if(matrix[i-1][j-1]==1){ 
                    count++;
                    square[i][j] = Math.min(square[i-1][j-1],square[i][j-1]);
                     
                    square[i][j]= Math.min(square[i][j],square[i-1][j])+1;
                    
                    if(max_val <= square[i][j]){
                        if(square[i][j]==2){
                            count++;
                        }
                        if(square[i][j]>2)
                            count=count+(square[i][j]-1);
                     
                     
                    }
                      
                }
                
            }
        }
        
        return count;
    }
}