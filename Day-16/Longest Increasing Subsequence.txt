300. Longest Increasing Subsequence

Given an unsorted array of integers, find the length of longest increasing subsequence.

Example:

Input: [10,9,2,5,3,7,101,18]
Output: 4 
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4. 




import java.util.Arrays;
class Solution {
    
    public int lengthOfLIS(int[] nums) {
        
      
        if(nums.length==0)
            return 0;
        int[] lis = new int[nums.length];
        
        for(int i = 0 ; i<nums.length ; i++){
            
            lis[i]=1;
        }
        
        for(int i =1 ; i< nums.length ; i++){
            
            for(int j = 0 ; j < i ; j++){
                
                if( nums[i]>nums[j] ){
                    
                    lis[i]=Math.max(lis[i],lis[j]+1);
                    
                    
                   
                }
                
            }
        }
        
          int max = Arrays.stream(lis).max().getAsInt();
        
        
        return max;
    }
}